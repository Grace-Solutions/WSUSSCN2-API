version: '3.8'

services:
  # API Gateway
  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-5000}:80"
    environment:
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE=${PG_DATABASE}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-Information}
    depends_on:
      - db
      - redis
      - minio
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128m
    volumes:
      - type: bind
        source: ../configs/nlog/NLog.config
        target: /app/NLog.config
        read_only: true

  # Sync Microservice
  sync:
    build:
      context: ../backend/microservices/sync
      dockerfile: Dockerfile
    environment:
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE=${PG_DATABASE}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - CAB_SYNC_INTERVAL=${CAB_SYNC_INTERVAL:-1d}
      - LOG_LEVEL=${LOG_LEVEL:-Information}
    depends_on:
      - db
      - minio
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128m
    volumes:
      - type: bind
        source: ../configs/nlog/NLog.config
        target: /app/NLog.config
        read_only: true

  # Parse Microservice
  parse:
    build:
      context: ../backend/microservices/parse
      dockerfile: Dockerfile
    environment:
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE=${PG_DATABASE}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-Information}
    depends_on:
      - db
      - minio
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128m
    volumes:
      - type: bind
        source: ../configs/nlog/NLog.config
        target: /app/NLog.config
        read_only: true

  # Rebuild Microservice
  rebuild:
    build:
      context: ../backend/microservices/rebuild
      dockerfile: Dockerfile
    environment:
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE=${PG_DATABASE}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - GROUP_STRATEGY=${GROUP_STRATEGY:-Year-OS}
      - LOG_LEVEL=${LOG_LEVEL:-Information}
    depends_on:
      - db
      - minio
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128m
    volumes:
      - type: bind
        source: ../configs/nlog/NLog.config
        target: /app/NLog.config
        read_only: true

  # UI
  ui:
    build:
      context: ../ui
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - API_URL=http://api:80
      - UI_DEFAULT_USER=${UI_DEFAULT_USER:-admin}
      - UI_DEFAULT_PASSWORD=${UI_DEFAULT_PASSWORD:-admin}
    depends_on:
      - api
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128m

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../docs/database-schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128m

  # Redis for caching
  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128m

  # MinIO for object storage
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128m

volumes:
  postgres_data:
  redis_data:
  minio_data: